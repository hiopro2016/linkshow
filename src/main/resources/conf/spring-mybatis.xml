<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util 
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
    
    
	<bean id="ddzpmOracleDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init"
    destroy-method="close" >
	    <property name="driverClassName">
	      <value>${jdbc_driverClassName}</value>
	    </property>
	    <property name="url">
	      <value>${jdbc_url}</value>
	    </property>
	    <property name="username">
	      <value>${jdbc_username}</value>
	    </property>
	    <property name="password">
	      <value>${jdbc_password}</value>
	    </property>
	     <property name="testOnBorrow" value="false" />  
	    <!-- 连接池最大使用连接数 -->
	    <property name="maxActive">
	      <value>300</value>
	    </property>
	    <!-- 初始化连接大小 -->
	    <property name="initialSize">
	      <value>20</value>
	    </property>
	    <!-- 获取连接最大等待时间 -->
	    <property name="maxWait">
	      <value>30000</value>
	    </property>
	    <!-- 连接池最小空闲 -->
	    <property name="minIdle">
	      <value>3</value>
	    </property>
	    <!-- 自动清除无用连接 -->
	    <property name="removeAbandoned">
	      <value>true</value>
	    </property>
	    <!-- 清除无用连接的等待时间 -->
	    <property name="removeAbandonedTimeout">
	      <value>180</value>
	    </property>
	    <!-- 连接属性 -->
	    <property name="connectionProperties">
	      <value>clientEncoding=UTF-8</value>
	    </property>
	    <!-- 监控 -->
	    <property name="filters" value="stat" />
	</bean>

   	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<!--<bean id="ddzpmOracleSqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="ddzpmOracleDataSource"
          p:configLocation="classpath:conf/mybatis-config.xml"
          p:mapperLocations="classpath:mapper/*.xml"/>--><!-- configLocation为mybatis属性 mapperLocations为所有mapper-->

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="ddzpmOracleSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="ddzpmOracleDataSource"/>
		<property name="configLocation" value="classpath:conf/mybatis-config.xml" />
		<property name="mapperLocations" >
			<array>
				<value>classpath:mapper/*.xml</value>
				<!-- datav相关mapper文件 -->
				<value>classpath:mapper/datav/*.xml</value>
				<!-- 巨米相关mapper文件 -->
				<value>classpath:mapper/jumi/*.xml</value>
			</array>
		</property>
	</bean>
       
	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
        p:basePackage="com.ddzhuan.manage.dao"
        p:sqlSessionFactoryBeanName="ddzpmOracleSqlSessionFactory"/>
  
	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
	<tx:annotation-driven transaction-manager="ddzpmOracleTransactionManager" />

   	<!-- 对数据源进行事务管理 -->
  	<bean id="ddzpmOracleTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
        p:dataSource-ref="ddzpmOracleDataSource"/>

<!-- QUARTZ 任务计划配置  BEGIN ***********  BEGIN ***********  BEGIN ***********  BEGIN ***********  BEGIN ***********  BEGIN ************-->
<!-- 线程执行器配置，用于任务注册 -->
	<bean id="qzTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		<property name="queueCapacity" value="50" />
	</bean>

	<!-- 系统日志任务计划 BEGIN -->
	<bean id="SysLogInfoTask" class="com.ddzhuan.manage.qzschedule.SysLogInfoTask"/>

	<bean id="SysLogInfoTaskQzjob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="SysLogInfoTask" />
		<property name="targetMethod" value="run" />
	</bean>

	<bean id="SysLogInfoTaskCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="SysLogInfoTaskQzjob" />
		<property name="cronExpression" value="0 1/1 * ? * *" />
	</bean>
	<!-- 系统日志任务计划 END -->

	<!-- 订单统计任务计划 BEGIN -->
	<bean id="OrderInfoTask" class="com.ddzhuan.manage.qzschedule.OrderInfoTask"/>

	<bean id="OrderInfoTaskQzjob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="OrderInfoTask" />
		<property name="targetMethod" value="run" />
	</bean>

	<bean id="OrderInfoTaskCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="OrderInfoTaskQzjob" />
		<property name="cronExpression" value="0 1/1 * ? * *" />
	</bean>
	<!-- 订单统计任务计划 END -->

	<!-- DataV销售额定时任务 START -->
	<bean id="DataVSalesTask" class="com.ddzhuan.manage.qzschedule.DataVSalesTask"/>

	<bean id="DataVSalesTaskQzjob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="DataVSalesTask"/>
		<property name="targetMethod" value="run"/>
	</bean>

	<bean id="DataVSalesTaskCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="DataVSalesTaskQzjob" />
		<property name="cronExpression" value="*/10 * * * * ?" />
	</bean>
	<!-- DataV销售额定时任务 END -->


	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list><!--
	        	<ref bean="SysLogInfoTaskCronTrigger" />
	        	<ref bean="OrderInfoTaskCronTrigger" />
				-->
				<!--<ref bean="DataVSalesTaskCronTrigger" />-->
			</list>
		</property>
		<property name="taskExecutor" ref="qzTaskExecutor" />
		<property name="quartzProperties">
			<props>
				<!-- 跳过检测更新 -->
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
			</props>
		</property>
	</bean>

<!-- QUARTZ 任务计划配置  END ***********  END ***********  END ***********  END ***********  END ***********  END ************-->

	<!--MySQL 数据源配置 BEGIN  -->
  <bean id="mySqlDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName">
			<value>${mysql_jdbc_driverClassName}</value>
		</property>
		<property name="url">
			<value>${mysql_jdbc_url}</value>
		</property>
		<property name="username">
			<value>${mysql_jdbc_username}</value>
		</property>
		<property name="password">
			<value>${mysql_jdbc_password}</value>
		</property>
		<property name="testOnBorrow" value="false" />
		<!-- 连接池最大使用连接数 -->
		<property name="maxActive">
			<value>300</value>
		</property>
		<!-- 初始化连接大小 -->
		<property name="initialSize">
			<value>20</value>
		</property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait">
			<value>30000</value>
		</property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle">
			<value>3</value>
		</property>
		<!-- 自动清除无用连接 -->
		<property name="removeAbandoned">
			<value>true</value>
		</property>
		<!-- 清除无用连接的等待时间 -->
		<property name="removeAbandonedTimeout">
			<value>180</value>
		</property>
		<!-- 连接属性 -->
		<property name="connectionProperties">
			<value>clientEncoding=UTF-8</value>
		</property>
		<!-- 监控 -->
		<property name="filters" value="stat" />
	    <property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
	</bean>

	<!-- mybatis文件配置，扫描所有mapper文件 -->
	<bean id="mySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
		p:dataSource-ref="mySqlDataSource" p:configLocation="classpath:conf/mybatis-config-mysql.xml"
		p:mapperLocations="classpath:mysqlMapper/*.xml" /><!-- configLocation为mybatis属性 
		mapperLocations为所有mapper -->

	<!-- spring与mybatis整合配置，扫描所有dao -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"
		p:basePackage="com.ddzhuan.manage.mysqldao" p:sqlSessionFactoryBeanName="mySqlSessionFactory" />

	<!-- 事务注解驱动，标注@Transactional的类和方法将具有事务性 -->
	<tx:annotation-driven transaction-manager="mySqlTransactionManager"
		proxy-target-class="true" />

	<!-- 对数据源进行事务管理 -->
	<bean id="mySqlTransactionManager"
		  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="mySqlDataSource" />
		<qualifier value="mysql" />
	</bean>
	
	<!--MySQL 数据源配置 END  -->
  
  
</beans>
